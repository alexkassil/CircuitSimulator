try:
    import readline
except ImportError:
    pass

from reader import *
from circuit import *

# repl start
if __name__ == '__main__':
    while True:
        try:
            user_input = input('--> ')
            circuit = tokenize(user_input)
            inputs = find_inputs(circuit)
            test = Circuit(inputs, circuit)
            test.logic_gate()
        except (SyntaxError) as err:
            print(type(err).__name__ + ':', err)
        except (KeyboardInterrupt, EOFError):
            print()
            print(""" 
  _    _            _   _  _____    _____                                              
 | |  | |    /\    | \ | ||  __ \  / ____|                                             
 | |__| |   /  \   |  \| || |  | || (___                                               
 |  __  |  / /\ \  | . ` || |  | | \___ \                                              
 | |  | | / ____ \ | |\  || |__| | ____) |                                             
 |_|  |_|/_/    \_\|_| \_||_____/ |_____/                                              
   ____   _   _                                                                        
  / __ \ | \ | |                                                                       
 | |  | ||  \| |                                                                       
 | |  | || . ` |                                                                       
 | |__| || |\  |                                                                       
  \____/ |_| \_|                                                                       
  _____   _____             _____  _______  _____  _____            _                  
 |  __ \ |  __ \     /\    / ____||__   __||_   _|/ ____|    /\    | |                 
 | |__) || |__) |   /  \  | |        | |     | | | |        /  \   | |                 
 |  ___/ |  _  /   / /\ \ | |        | |     | | | |       / /\ \  | |                 
 | |     | | \ \  / ____ \| |____    | |    _| |_| |____  / ____ \ | |____             
 |_|     |_|  \_\/_/    \_\\\_____|   |_|   |_____|\_____|/_/    \_\|______|            
  ______  _       ______  _____  _______  _____    ____   _   _  _____  _____   _____  
 |  ____|| |     |  ____|/ ____||__   __||  __ \  / __ \ | \ | ||_   _|/ ____| / ____| 
 | |__   | |     | |__  | |        | |   | |__) || |  | ||  \| |  | | | |     | (___   
 |  __|  | |     |  __| | |        | |   |  _  / | |  | || . ` |  | | | |      \___ \  
 | |____ | |____ | |____| |____    | |   | | \ \ | |__| || |\  | _| |_| |____  ____) | 
 |______||______||______|\_____|   |_|   |_|  \_\ \____/ |_| \_||_____|\_____||_____/  
  ______        _       _        ___    ___  __  ______                                
 |  ____|/\    | |     | |      |__ \  / _ \/_ ||____  |                               
 | |__  /  \   | |     | |         ) || | | || |    / /                                
 |  __|/ /\ \  | |     | |        / / | | | || |   / /                                 
 | |  / ____ \ | |____ | |____   / /_ | |_| || |  / /                                  
 |_| /_/    \_\|______||______| |____| \___/ |_| /_/                                   
            _       ______ __   __          _____   _    _  ____   ______  _   _       
     /\    | |     |  ____|\ \ / /    _    |  __ \ | |  | ||  _ \ |  ____|| \ | |      
    /  \   | |     | |__    \ V /   _| |_  | |__) || |  | || |_) || |__   |  \| |      
   / /\ \  | |     |  __|    > <   |_   _| |  _  / | |  | ||  _ < |  __|  | . ` |      
  / ____ \ | |____ | |____  / . \    |_|   | | \ \ | |__| || |_) || |____ | |\  |      
 /_/    \_\|______||______|/_/ \_\         |_|  \_\ \____/ |____/ |______||_| \_|      
                                                                                       
                                                                                       
 """) 
            print()
            break
            
